{"ast":null,"code":"var _jsxFileName = \"/home/kaiba/Documents/Workspace/av1/reactav1/src/components/table/TableBasic.jsx\";\nimport React, { Component } from \"react\";\nimport ProductDataService from \"../../services/ProductServices\";\nexport default class Table extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchByName = this.onChangeSearchByName.bind(this);\n    this.getProducts = this.getProducts.bind(this); // this.updTable = this.updTable.bind(this);\n\n    this.state = {\n      products: [],\n      searchName: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    this.getProducts();\n  }\n\n  onChangeSearchByName(e) {\n    const searchName = e.target.value;\n    this.setState({\n      searchName: searchName\n    });\n  }\n\n  SearchByName() {\n    ProductDataService.findByName(this.state.searchName).then(response => {\n      this.setState({\n        products: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  getProducts() {\n    ProductDataService.getAll().then(response => {\n      this.setState({\n        products: response.data\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updTable() {\n    this.getProducts();\n    this.setState({});\n  }\n\n  renderTableData() {\n    return this.state.products.map(product => {\n      const {\n        id,\n        name,\n        costPrice,\n        sellPrice\n      } = product;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, costPrice), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, sellPrice));\n    });\n  } // return this.state.products.map((product, index) => {\n  //     const { id, name, costPrice, sellPrice } = product;\n  //     return (\n  //         <tr key={name}>\n  //             <td>{id}</td>\n  //             <td>{name}</td>\n  //             <td>{costPrice}</td>\n  //             <td>{sellPrice}</td>\n  //         </tr>\n  //     );\n  // });\n\n\n  render() {\n    //Whenever our class runs, render method will be called automatically, it may have already defined in the constructor behind the scene.\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Atualiza pre\\xE7o de Produto\"), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"products\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, this.renderTableData())));\n  }\n\n}","map":{"version":3,"sources":["/home/kaiba/Documents/Workspace/av1/reactav1/src/components/table/TableBasic.jsx"],"names":["React","Component","ProductDataService","Table","constructor","props","onChangeSearchByName","bind","getProducts","state","products","searchName","componentDidMount","e","target","value","setState","SearchByName","findByName","then","response","data","console","log","catch","getAll","updTable","renderTableData","map","product","id","name","costPrice","sellPrice","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ProductDataService from \"../../services/ProductServices\";\n\nexport default class Table extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeSearchByName = this.onChangeSearchByName.bind(this);\n        this.getProducts = this.getProducts.bind(this);\n        // this.updTable = this.updTable.bind(this);\n\n        this.state = {\n            products: [],\n            searchName: \"\",\n        };\n    }\n\n    async componentDidMount() {\n        this.getProducts();\n    }\n\n    onChangeSearchByName(e) {\n        const searchName = e.target.value;\n\n        this.setState({\n            searchName: searchName,\n        });\n    }\n\n    SearchByName() {\n        ProductDataService.findByName(this.state.searchName)\n            .then((response) => {\n                this.setState({\n                    products: response.data,\n                });\n                console.log(response.data);\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n    getProducts() {\n        ProductDataService.getAll()\n            .then((response) => {\n                this.setState({\n                    products: response.data,\n                });\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    updTable() {\n        this.getProducts();\n        this.setState({});\n    }\n\n    renderTableData() {\n        return this.state.products.map((product) => {\n        const { id, name, costPrice, sellPrice } = product;\n        return(\n            \n            <tr key={name}>\n                <td>{id}</td>\n                <td>{name}</td>\n                <td>{costPrice}</td>\n                <td>{sellPrice}</td>\n            </tr>\n            )\n        })\n    }\n    // return this.state.products.map((product, index) => {\n    //     const { id, name, costPrice, sellPrice } = product;\n    //     return (\n    //         <tr key={name}>\n    //             <td>{id}</td>\n    //             <td>{name}</td>\n    //             <td>{costPrice}</td>\n    //             <td>{sellPrice}</td>\n    //         </tr>\n    //     );\n    // });\n\n    render() {\n        //Whenever our class runs, render method will be called automatically, it may have already defined in the constructor behind the scene.\n        return (\n            <div>\n                <h1 id=\"title\">Atualiza pre√ßo de Produto</h1>\n                <table id=\"products\">\n                    <tbody>{this.renderTableData()}</tbody>\n                </table>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}