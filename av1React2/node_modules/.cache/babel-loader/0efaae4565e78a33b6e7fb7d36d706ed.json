{"ast":null,"code":"var _jsxFileName = \"/home/kaiba/Documents/Workspace/av1/reactav1/avweb2/av1React2/src/components/table/TableBasic.jsx\";\nimport React, { Component } from \"react\";\nimport ProductDataService from \"../../services/ProductServices\";\nexport default class Table extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchByName = this.onChangeSearchByName.bind(this);\n    this.getProducts = this.getProducts.bind(this); // this.updTable = this.updTable.bind(this);\n\n    this.state = {\n      products: [],\n      searchName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  onChangeSearchByName(e) {\n    const searchName = e.target.value;\n    this.setState({\n      searchName: searchName\n    });\n  }\n\n  SearchByName() {\n    ProductDataService.findByName(this.state.searchName).then(response => {\n      this.setState({\n        products: response.data\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  getProducts() {\n    ProductDataService.getAll().then(response => {\n      this.setState({\n        products: response.data\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updTable() {\n    this.getProducts();\n    this.setState({});\n  } // renderTableData() {\n  //     return this.state.products.map((product, index) => {\n  //         //destructuring\n  //        return (\n  //        )\n  //     })\n  //  }\n  // return this.state.products.map((product, index) => {\n  //     const { id, name, costPrice, sellPrice } = product;\n  //     return (\n  //         <tr key={name}>\n  //             <td>{id}</td>\n  //             <td>{name}</td>\n  //             <td>{costPrice}</td>\n  //             <td>{sellPrice}</td>\n  //         </tr>\n  //     );\n  // });\n\n\n  render() {\n    const {\n      id,\n      name,\n      costPrice,\n      sellPrice\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Atualiza pre\\xE7o de Produto\"), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"products\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, products && usuarios.map((usuario, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 18\n      }\n    }, id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 18\n      }\n    }, name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 18\n      }\n    }, costPrice), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 18\n      }\n    }, sellPrice)))), \")}\");\n  }\n\n}","map":{"version":3,"sources":["/home/kaiba/Documents/Workspace/av1/reactav1/avweb2/av1React2/src/components/table/TableBasic.jsx"],"names":["React","Component","ProductDataService","Table","constructor","props","onChangeSearchByName","bind","getProducts","state","products","searchName","componentDidMount","e","target","value","setState","SearchByName","findByName","then","response","data","catch","console","log","getAll","updTable","render","id","name","costPrice","sellPrice","usuarios","map","usuario","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AAEA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AACzCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB,CAJe,CAKf;;AAEA,SAAKE,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,WAAL;AACH;;AAEDF,EAAAA,oBAAoB,CAACO,CAAD,EAAI;AACpB,UAAMF,UAAU,GAAGE,CAAC,CAACC,MAAF,CAASC,KAA5B;AAEA,SAAKC,QAAL,CAAc;AACVL,MAAAA,UAAU,EAAEA;AADF,KAAd;AAGH;;AAEDM,EAAAA,YAAY,GAAG;AACXf,IAAAA,kBAAkB,CAACgB,UAAnB,CAA8B,KAAKT,KAAL,CAAWE,UAAzC,EACKQ,IADL,CACWC,QAAD,IAAc;AAChB,WAAKJ,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAAEU,QAAQ,CAACC;AADT,OAAd;AAKH,KAPL,EAQKC,KARL,CAQYT,CAAD,IAAO;AACVU,MAAAA,OAAO,CAACC,GAAR,CAAYX,CAAZ;AACH,KAVL;AAWH;;AACDL,EAAAA,WAAW,GAAG;AACVN,IAAAA,kBAAkB,CAACuB,MAAnB,GACKN,IADL,CACWC,QAAD,IAAc;AAChB,WAAKJ,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAAEU,QAAQ,CAACC;AADT,OAAd;AAIH,KANL,EAOKC,KAPL,CAOYT,CAAD,IAAO;AACVU,MAAAA,OAAO,CAACC,GAAR,CAAYX,CAAZ;AACH,KATL;AAUH;;AAEDa,EAAAA,QAAQ,GAAG;AACP,SAAKlB,WAAL;AACA,SAAKQ,QAAL,CAAc,EAAd;AACH,GAvDwC,CA0DzC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA,SAAZ;AAAuBC,MAAAA;AAAvB,QAAqC,KAAKtB,KAAhD;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,eAEI;AAAO,MAAA,EAAE,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCC,QAAQ,IACXsB,QAAQ,CAACC,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACV;AAAI,MAAA,GAAG,EAAEN,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,EAAL,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,IAAL,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,SAAL,CAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,SAAL,CAJA,CADH,CAFE,CAFJ,OADJ;AAeH;;AA/FwC","sourcesContent":["import React, { Component } from \"react\";\nimport ProductDataService from \"../../services/ProductServices\";\n\nexport default class Table extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeSearchByName = this.onChangeSearchByName.bind(this);\n        this.getProducts = this.getProducts.bind(this);\n        // this.updTable = this.updTable.bind(this);\n\n        this.state = {\n            products: [],\n            searchName: \"\",\n        };\n    }\n\n    componentDidMount() {\n        this.getProducts();\n    }\n\n    onChangeSearchByName(e) {\n        const searchName = e.target.value;\n\n        this.setState({\n            searchName: searchName,\n        });\n    }\n\n    SearchByName() {\n        ProductDataService.findByName(this.state.searchName)\n            .then((response) => {\n                this.setState({\n                    products: response.data,\n                    \n                });\n                \n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n    getProducts() {\n        ProductDataService.getAll()\n            .then((response) => {\n                this.setState({\n                    products: response.data,\n                    \n                });\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    updTable() {\n        this.getProducts();\n        this.setState({});\n    }\n\n   \n    // renderTableData() {\n    //     return this.state.products.map((product, index) => {\n    //         //destructuring\n    //        return (\n           \n    //        )\n    //     })\n    //  }\n    // return this.state.products.map((product, index) => {\n    //     const { id, name, costPrice, sellPrice } = product;\n    //     return (\n    //         <tr key={name}>\n    //             <td>{id}</td>\n    //             <td>{name}</td>\n    //             <td>{costPrice}</td>\n    //             <td>{sellPrice}</td>\n    //         </tr>\n    //     );\n    // });\n\n    render() {\n        const { id, name, costPrice, sellPrice } = this.state;\n        return (\n            <div>\n                <h1 id=\"title\">Atualiza pre√ßo de Produto</h1>\n                <table id=\"products\">\n                {products &&\n              usuarios.map((usuario, index) => (\n                 <tr key={name}>\n                 <td>{id}</td>\n                 <td>{name}</td>\n                 <td>{costPrice}</td>\n                 <td>{sellPrice}</td>\n              </tr>))}\n                </table>)}\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}